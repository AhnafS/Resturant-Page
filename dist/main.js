(()=>{"use strict";var n={430:(n,e,t)=>{t.d(e,{Z:()=>l});var r=t(15),o=t.n(r),i=t(645),a=t.n(i),c=t(667),s=t.n(c),A=t(646),d=a()(o()),m=s()(A);d.push([n.id,"html,\nbody {\n    margin: 0;\n    height: 100%;\n}\n\n#contactPage {\n    min-height: 100vh;\n    height: 100%;\n    background: url("+m+");\n    background-size: cover;\n    background-position: center center;\n    background-repeat: no-repeat;\n    border: .00000001px solid transparent;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\n#contactInfo {\n    background-color: bisque;\n    width: 30%;\n    text-align: center;\n    height: 16em;\n    display: flex;\n    align-items: center;\n    flex-direction: column;\n    opacity: .8;\n    font-size: 2em;\n    border-radius: 1em;\n}\n\n#contactInfo:hover {\n    transform: scale(1.1);\n}","",{version:3,sources:["webpack://./src/css/contactPage.css"],names:[],mappings:"AAAA;;IAEI,SAAS;IACT,YAAY;AAChB;;AAEA;IACI,iBAAiB;IACjB,YAAY;IACZ,mDAAoD;IACpD,sBAAsB;IACtB,kCAAkC;IAClC,4BAA4B;IAC5B,qCAAqC;IACrC,aAAa;IACb,uBAAuB;IACvB,mBAAmB;AACvB;;AAEA;IACI,wBAAwB;IACxB,UAAU;IACV,kBAAkB;IAClB,YAAY;IACZ,aAAa;IACb,mBAAmB;IACnB,sBAAsB;IACtB,WAAW;IACX,cAAc;IACd,kBAAkB;AACtB;;AAEA;IACI,qBAAqB;AACzB",sourcesContent:["html,\nbody {\n    margin: 0;\n    height: 100%;\n}\n\n#contactPage {\n    min-height: 100vh;\n    height: 100%;\n    background: url('../img/contactPageBackground.jpeg');\n    background-size: cover;\n    background-position: center center;\n    background-repeat: no-repeat;\n    border: .00000001px solid transparent;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\n#contactInfo {\n    background-color: bisque;\n    width: 30%;\n    text-align: center;\n    height: 16em;\n    display: flex;\n    align-items: center;\n    flex-direction: column;\n    opacity: .8;\n    font-size: 2em;\n    border-radius: 1em;\n}\n\n#contactInfo:hover {\n    transform: scale(1.1);\n}"],sourceRoot:""}]);const l=d},25:(n,e,t)=>{t.d(e,{Z:()=>c});var r=t(15),o=t.n(r),i=t(645),a=t.n(i)()(o());a.push([n.id,"footer {\n    position: relative;\n    bottom: 0;\n    left: 0;\n    width: 100%;\n    text-align: center;\n    background-color: #222831;\n    color: #DDDDDD;\n    height: 4em;\n    display: flex;\n    justify-content: center;\n}\n\nfooter img {\n    object-fit: cover;\n    width: 2em;\n    margin-left: 1em;\n    padding: 1em 0 1em 0;\n    border-radius: 100%;\n}","",{version:3,sources:["webpack://./src/css/footer.css"],names:[],mappings:"AAAA;IACI,kBAAkB;IAClB,SAAS;IACT,OAAO;IACP,WAAW;IACX,kBAAkB;IAClB,yBAAyB;IACzB,cAAc;IACd,WAAW;IACX,aAAa;IACb,uBAAuB;AAC3B;;AAEA;IACI,iBAAiB;IACjB,UAAU;IACV,gBAAgB;IAChB,oBAAoB;IACpB,mBAAmB;AACvB",sourcesContent:["footer {\n    position: relative;\n    bottom: 0;\n    left: 0;\n    width: 100%;\n    text-align: center;\n    background-color: #222831;\n    color: #DDDDDD;\n    height: 4em;\n    display: flex;\n    justify-content: center;\n}\n\nfooter img {\n    object-fit: cover;\n    width: 2em;\n    margin-left: 1em;\n    padding: 1em 0 1em 0;\n    border-radius: 100%;\n}"],sourceRoot:""}]);const c=a},35:(n,e,t)=>{t.d(e,{Z:()=>l});var r=t(15),o=t.n(r),i=t(645),a=t.n(i),c=t(667),s=t.n(c),A=t(678),d=a()(o());d.push([n.id,"@import url(https://fonts.googleapis.com/css2?family=Prompt&display=swap);"]);var m=s()(A);d.push([n.id,"body,\nhtml {\n    /* width: 100%;\n    height: 100%; */\n    margin: 0;\n    font-family: 'Prompt', sans-serif;\n}\n\n\n/* * {\n    border: 1px solid transparent;\n} */\n\n\n/* #content {\n    height: 100%;\n    width: 100%;\n} */\n\n#homePage {\n    background-image: url("+m+");\n    height: 100vh;\n    width: 100%;\n    background-repeat: no-repeat;\n    background-size: cover;\n    background-position: center center;\n}\n\n#homeInfo {\n    background-color: antiquewhite;\n    width: 30em;\n    height: 30em;\n    padding: 1em;\n    text-align: center;\n    font-size: 1.3em;\n    opacity: 0.9;\n    border-radius: 1.5em;\n    position: relative;\n    left: 50%;\n    top: 40%;\n    transform: translate(-50%, -50%);\n}\n\n#homeInfo img {\n    height: 70%;\n    object-fit: cover;\n    border-radius: 100%;\n}\n\n\n/* #homeInfo {\n    background-color: antiquewhite;\n    width: 30em;\n    height: 30em;\n    padding: 1em;\n    text-align: center;\n    font-size: 1.3em;\n    opacity: 0.9;\n    border-radius: 1.5em;\n    position: relative;\n    left: 50%;\n    top: 40%;\n    transform: translate(-50%, -50%);\n}\n\n#homeInfo img {\n    height: 70%;\n    object-fit: cover;\n    border-radius: 100%;\n} */","",{version:3,sources:["webpack://./src/css/homePage.css"],names:[],mappings:"AACA;;IAEI;mBACe;IACf,SAAS;IACT,iCAAiC;AACrC;;;AAGA;;GAEG;;;AAGH;;;GAGG;;AAEH;IACI,yDAAmD;IACnD,aAAa;IACb,WAAW;IACX,4BAA4B;IAC5B,sBAAsB;IACtB,kCAAkC;AACtC;;AAEA;IACI,8BAA8B;IAC9B,WAAW;IACX,YAAY;IACZ,YAAY;IACZ,kBAAkB;IAClB,gBAAgB;IAChB,YAAY;IACZ,oBAAoB;IACpB,kBAAkB;IAClB,SAAS;IACT,QAAQ;IACR,gCAAgC;AACpC;;AAEA;IACI,WAAW;IACX,iBAAiB;IACjB,mBAAmB;AACvB;;;AAGA;;;;;;;;;;;;;;;;;;;GAmBG",sourcesContent:["@import url('https://fonts.googleapis.com/css2?family=Prompt&display=swap');\nbody,\nhtml {\n    /* width: 100%;\n    height: 100%; */\n    margin: 0;\n    font-family: 'Prompt', sans-serif;\n}\n\n\n/* * {\n    border: 1px solid transparent;\n} */\n\n\n/* #content {\n    height: 100%;\n    width: 100%;\n} */\n\n#homePage {\n    background-image: url('../img/homeBackground.jpeg');\n    height: 100vh;\n    width: 100%;\n    background-repeat: no-repeat;\n    background-size: cover;\n    background-position: center center;\n}\n\n#homeInfo {\n    background-color: antiquewhite;\n    width: 30em;\n    height: 30em;\n    padding: 1em;\n    text-align: center;\n    font-size: 1.3em;\n    opacity: 0.9;\n    border-radius: 1.5em;\n    position: relative;\n    left: 50%;\n    top: 40%;\n    transform: translate(-50%, -50%);\n}\n\n#homeInfo img {\n    height: 70%;\n    object-fit: cover;\n    border-radius: 100%;\n}\n\n\n/* #homeInfo {\n    background-color: antiquewhite;\n    width: 30em;\n    height: 30em;\n    padding: 1em;\n    text-align: center;\n    font-size: 1.3em;\n    opacity: 0.9;\n    border-radius: 1.5em;\n    position: relative;\n    left: 50%;\n    top: 40%;\n    transform: translate(-50%, -50%);\n}\n\n#homeInfo img {\n    height: 70%;\n    object-fit: cover;\n    border-radius: 100%;\n} */"],sourceRoot:""}]);const l=d},966:(n,e,t)=>{t.d(e,{Z:()=>l});var r=t(15),o=t.n(r),i=t(645),a=t.n(i),c=t(667),s=t.n(c),A=t(950),d=a()(o());d.push([n.id,"@import url(https://fonts.googleapis.com/css2?family=Prompt&display=swap);"]);var m=s()(A);d.push([n.id,"body,\nhtml {\n    margin: 0;\n    font-family: 'Prompt', sans-serif;\n}\n\n\n/* #content {\n    height: 100%;\n    width: 100%;\n} */\n\n#menuPage {\n    background-image: url("+m+");\n    width: 100%;\n    height: 100%;\n    background-repeat: no-repeat;\n    background-size: cover;\n    background-position: center center;\n    border: .00000001px solid transparent;\n}\n\n#menu {\n    width: 55%;\n    object-fit: cover;\n    margin: 5em auto 5em auto;\n    height: 100%;\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-template-rows: 25em 25em 25em;\n    grid-auto-rows: 25em;\n    grid-gap: 1.5em;\n    overflow: scroll;\n}\n\n.item {\n    background-color: #A7BBC7;\n    width: 100%;\n    height: 100%;\n    text-align: center;\n    font-size: 1.4em;\n    border-radius: 1em;\n}\n\n.item img {\n    width: 50%;\n    height: 8em;\n    object-fit: contain;\n    background-color: rgb(76, 122, 153);\n    border-radius: 100%;\n}\n\n.item h3 {\n    font-size: 2em;\n    margin: .3em 0 .5em 0;\n}\n\n.item h4 {\n    font-size: 1.5em;\n}\n\n.item:hover {\n    background-color: rgb(73, 134, 175);\n    transform: scale(1.01);\n}\n\n\n/* #menu {\n    width: 55%;\n    object-fit: cover;\n    margin: 5em auto 5em auto;\n    height: 100%;\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-template-rows: 25em 25em 25em;\n    grid-auto-rows: 25em;\n    grid-gap: 1.5em;\n    overflow: scroll;\n}\n\n.item {\n    background-color: #A7BBC7;\n    width: 100%;\n    height: 100%;\n    text-align: center;\n    font-size: 1.4em;\n    border-radius: 1em;\n}\n\n.item img {\n    width: 50%;\n    height: 8em;\n    object-fit: contain;\n    background-color: rgb(76, 122, 153);\n    border-radius: 100%;\n}\n\n.item h3 {\n    font-size: 2em;\n    margin: .3em 0 .5em 0;\n}\n\n.item h4 {\n    font-size: 1.5em;\n}\n\n.item:hover {\n    background-color: rgb(73, 134, 175);\n    transform: scale(1.01);\n} */","",{version:3,sources:["webpack://./src/css/menuPage.css"],names:[],mappings:"AACA;;IAEI,SAAS;IACT,iCAAiC;AACrC;;;AAGA;;;GAGG;;AAEH;IACI,yDAAmD;IACnD,WAAW;IACX,YAAY;IACZ,4BAA4B;IAC5B,sBAAsB;IACtB,kCAAkC;IAClC,qCAAqC;AACzC;;AAEA;IACI,UAAU;IACV,iBAAiB;IACjB,yBAAyB;IACzB,YAAY;IACZ,aAAa;IACb,8BAA8B;IAC9B,kCAAkC;IAClC,oBAAoB;IACpB,eAAe;IACf,gBAAgB;AACpB;;AAEA;IACI,yBAAyB;IACzB,WAAW;IACX,YAAY;IACZ,kBAAkB;IAClB,gBAAgB;IAChB,kBAAkB;AACtB;;AAEA;IACI,UAAU;IACV,WAAW;IACX,mBAAmB;IACnB,mCAAmC;IACnC,mBAAmB;AACvB;;AAEA;IACI,cAAc;IACd,qBAAqB;AACzB;;AAEA;IACI,gBAAgB;AACpB;;AAEA;IACI,mCAAmC;IACnC,sBAAsB;AAC1B;;;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;GA0CG",sourcesContent:["@import url('https://fonts.googleapis.com/css2?family=Prompt&display=swap');\nbody,\nhtml {\n    margin: 0;\n    font-family: 'Prompt', sans-serif;\n}\n\n\n/* #content {\n    height: 100%;\n    width: 100%;\n} */\n\n#menuPage {\n    background-image: url('../img/menuBackground.jpeg');\n    width: 100%;\n    height: 100%;\n    background-repeat: no-repeat;\n    background-size: cover;\n    background-position: center center;\n    border: .00000001px solid transparent;\n}\n\n#menu {\n    width: 55%;\n    object-fit: cover;\n    margin: 5em auto 5em auto;\n    height: 100%;\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-template-rows: 25em 25em 25em;\n    grid-auto-rows: 25em;\n    grid-gap: 1.5em;\n    overflow: scroll;\n}\n\n.item {\n    background-color: #A7BBC7;\n    width: 100%;\n    height: 100%;\n    text-align: center;\n    font-size: 1.4em;\n    border-radius: 1em;\n}\n\n.item img {\n    width: 50%;\n    height: 8em;\n    object-fit: contain;\n    background-color: rgb(76, 122, 153);\n    border-radius: 100%;\n}\n\n.item h3 {\n    font-size: 2em;\n    margin: .3em 0 .5em 0;\n}\n\n.item h4 {\n    font-size: 1.5em;\n}\n\n.item:hover {\n    background-color: rgb(73, 134, 175);\n    transform: scale(1.01);\n}\n\n\n/* #menu {\n    width: 55%;\n    object-fit: cover;\n    margin: 5em auto 5em auto;\n    height: 100%;\n    display: grid;\n    grid-template-columns: 1fr 1fr;\n    grid-template-rows: 25em 25em 25em;\n    grid-auto-rows: 25em;\n    grid-gap: 1.5em;\n    overflow: scroll;\n}\n\n.item {\n    background-color: #A7BBC7;\n    width: 100%;\n    height: 100%;\n    text-align: center;\n    font-size: 1.4em;\n    border-radius: 1em;\n}\n\n.item img {\n    width: 50%;\n    height: 8em;\n    object-fit: contain;\n    background-color: rgb(76, 122, 153);\n    border-radius: 100%;\n}\n\n.item h3 {\n    font-size: 2em;\n    margin: .3em 0 .5em 0;\n}\n\n.item h4 {\n    font-size: 1.5em;\n}\n\n.item:hover {\n    background-color: rgb(73, 134, 175);\n    transform: scale(1.01);\n} */"],sourceRoot:""}]);const l=d},119:(n,e,t)=>{t.d(e,{Z:()=>c});var r=t(15),o=t.n(r),i=t(645),a=t.n(i)()(o());a.push([n.id,"@import url(https://fonts.googleapis.com/css2?family=Prompt&display=swap);"]),a.push([n.id,"body,\nhtml {\n    width: 100%;\n    margin: 0;\n    font-family: 'Prompt', sans-serif;\n}\n\nnav {\n    display: flex;\n    justify-content: space-between;\n    align-content: center;\n    background-color: #222831;\n    color: #DDDDDD;\n    font-size: 1.3em;\n}\n\n#nav-links h3 {\n    text-decoration: none;\n    margin: 0 1em 0 1em;\n    color: #DDDDDD;\n    display: inline;\n}\n\n#nav-links h3:hover {\n    cursor: pointer;\n    color: #F05454;\n}\n\n#nav-links {\n    display: flex;\n    align-items: center;\n    font-size: 1.3em;\n}\n\n#name {\n    margin: 0 1em 0 1em;\n}","",{version:3,sources:["webpack://./src/css/nav-bar.css"],names:[],mappings:"AACA;;IAEI,WAAW;IACX,SAAS;IACT,iCAAiC;AACrC;;AAEA;IACI,aAAa;IACb,8BAA8B;IAC9B,qBAAqB;IACrB,yBAAyB;IACzB,cAAc;IACd,gBAAgB;AACpB;;AAEA;IACI,qBAAqB;IACrB,mBAAmB;IACnB,cAAc;IACd,eAAe;AACnB;;AAEA;IACI,eAAe;IACf,cAAc;AAClB;;AAEA;IACI,aAAa;IACb,mBAAmB;IACnB,gBAAgB;AACpB;;AAEA;IACI,mBAAmB;AACvB",sourcesContent:["@import url('https://fonts.googleapis.com/css2?family=Prompt&display=swap');\nbody,\nhtml {\n    width: 100%;\n    margin: 0;\n    font-family: 'Prompt', sans-serif;\n}\n\nnav {\n    display: flex;\n    justify-content: space-between;\n    align-content: center;\n    background-color: #222831;\n    color: #DDDDDD;\n    font-size: 1.3em;\n}\n\n#nav-links h3 {\n    text-decoration: none;\n    margin: 0 1em 0 1em;\n    color: #DDDDDD;\n    display: inline;\n}\n\n#nav-links h3:hover {\n    cursor: pointer;\n    color: #F05454;\n}\n\n#nav-links {\n    display: flex;\n    align-items: center;\n    font-size: 1.3em;\n}\n\n#name {\n    margin: 0 1em 0 1em;\n}"],sourceRoot:""}]);const c=a},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t=n(e);return e[2]?"@media ".concat(e[2]," {").concat(t,"}"):t})).join("")},e.i=function(n,t,r){"string"==typeof n&&(n=[[null,n,""]]);var o={};if(r)for(var i=0;i<this.length;i++){var a=this[i][0];null!=a&&(o[a]=!0)}for(var c=0;c<n.length;c++){var s=[].concat(n[c]);r&&o[s[0]]||(t&&(s[2]?s[2]="".concat(t," and ").concat(s[2]):s[2]=t),e.push(s))}},e}},15:n=>{function e(n,e){(null==e||e>n.length)&&(e=n.length);for(var t=0,r=new Array(e);t<e;t++)r[t]=n[t];return r}n.exports=function(n){var t,r,o=(r=4,function(n){if(Array.isArray(n))return n}(t=n)||function(n,e){var t=n&&("undefined"!=typeof Symbol&&n[Symbol.iterator]||n["@@iterator"]);if(null!=t){var r,o,i=[],a=!0,c=!1;try{for(t=t.call(n);!(a=(r=t.next()).done)&&(i.push(r.value),!e||i.length!==e);a=!0);}catch(n){c=!0,o=n}finally{try{a||null==t.return||t.return()}finally{if(c)throw o}}return i}}(t,r)||function(n,t){if(n){if("string"==typeof n)return e(n,t);var r=Object.prototype.toString.call(n).slice(8,-1);return"Object"===r&&n.constructor&&(r=n.constructor.name),"Map"===r||"Set"===r?Array.from(n):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?e(n,t):void 0}}(t,r)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),i=o[1],a=o[3];if("function"==typeof btoa){var c=btoa(unescape(encodeURIComponent(JSON.stringify(a)))),s="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(c),A="/*# ".concat(s," */"),d=a.sources.map((function(n){return"/*# sourceURL=".concat(a.sourceRoot||"").concat(n," */")}));return[i].concat(d).concat([A]).join("\n")}return[i].join("\n")}},667:n=>{n.exports=function(n,e){return e||(e={}),"string"!=typeof(n=n&&n.__esModule?n.default:n)?n:(/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),e.hash&&(n+=e.hash),/["'() \t\n]/.test(n)||e.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n)}},695:n=>{var e={};n.exports=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}},379:n=>{var e=[];function t(n){for(var t=-1,r=0;r<e.length;r++)if(e[r].identifier===n){t=r;break}return t}function r(n,r){for(var i={},a=[],c=0;c<n.length;c++){var s=n[c],A=r.base?s[0]+r.base:s[0],d=i[A]||0,m="".concat(A," ").concat(d);i[A]=d+1;var l=t(m),u={css:s[1],media:s[2],sourceMap:s[3]};-1!==l?(e[l].references++,e[l].updater(u)):e.push({identifier:m,updater:o(u,r),references:1}),a.push(m)}return a}function o(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap)return;t.update(n=e)}else t.remove()}}n.exports=function(n,o){var i=r(n=n||[],o=o||{});return function(n){n=n||[];for(var a=0;a<i.length;a++){var c=t(i[a]);e[c].references--}for(var s=r(n,o),A=0;A<i.length;A++){var d=t(i[A]);0===e[d].references&&(e[d].updater(),e.splice(d,1))}i=s}}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e),e}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var r=t.css,o=t.media,i=t.sourceMap;o?n.setAttribute("media",o):n.removeAttribute("media"),i&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(i))))," */")),e.styleTagTransform(r,n)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},240:(n,e,t)=>{n.exports=t.p+"d69aa1622c3b16217684.png"},468:(n,e,t)=>{n.exports=t.p+"f6adf54569b5411a47be.png"},570:(n,e,t)=>{n.exports=t.p+"0a70a55535423ab651c0.jpeg"},120:(n,e,t)=>{n.exports=t.p+"ecc67acad4712ffe87a7.png"},646:(n,e,t)=>{n.exports=t.p+"b15d4bc1b9fe08fe3e80.jpeg"},36:(n,e,t)=>{n.exports=t.p+"9f3ff671d54ac2c3ff5d.png"},730:(n,e,t)=>{n.exports=t.p+"8453913d2f0df55fa1fb.jpeg"},678:(n,e,t)=>{n.exports=t.p+"d46ec5245a9b37c67b0b.jpeg"},296:(n,e,t)=>{n.exports=t.p+"d36a5a62694b6715c2a7.png"},626:(n,e,t)=>{n.exports=t.p+"407e8e9e2759d73d5017.png"},950:(n,e,t)=>{n.exports=t.p+"cdf7f93b3f1202e7d483.jpeg"}},e={};function t(r){var o=e[r];if(void 0!==o)return o.exports;var i=e[r]={id:r,exports:{}};return n[r](i,i.exports,t),i.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var r in e)t.o(e,r)&&!t.o(n,r)&&Object.defineProperty(n,r,{enumerable:!0,get:e[r]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var r=e.getElementsByTagName("script");r.length&&(n=r[r.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),(()=>{var n=t(379),e=t.n(n),r=t(795),o=t.n(r),i=t(695),a=t.n(i),c=t(216),s=t.n(c),A=t(35),d={styleTagTransform:function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}},setAttributes:function(n){var e=t.nc;e&&n.setAttribute("nonce",e)},insert:function(n){var e=a()("head");if(!e)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");e.appendChild(n)}};d.domAPI=o(),d.insertStyleElement=s(),e()(A.Z,d),A.Z&&A.Z.locals&&A.Z.locals;var m=t(570),l=t(119),u={styleTagTransform:function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}},setAttributes:function(n){var e=t.nc;e&&n.setAttribute("nonce",e)},insert:function(n){var e=a()("head");if(!e)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");e.appendChild(n)}};u.domAPI=o(),u.insertStyleElement=s(),e()(l.Z,u),l.Z&&l.Z.locals&&l.Z.locals;const p=document.querySelector("#content"),h=function(){const n=document.createElement("nav"),e=document.createElement("div");e.setAttribute("id","name");let t=document.createElement("h1");t.textContent="Shah's Resturant",e.appendChild(t);const r=document.createElement("div");r.setAttribute("id","nav-links");let o=document.createElement("h3");o.textContent="Home";let i=document.createElement("h3");i.textContent="Menu";let a=document.createElement("h3");return a.textContent="Contact Us",r.append(o,i,a),n.append(e,r),{returnNav:function(){return n},returnHome:function(){return o},returnMenu:function(){return i},returnContactUs:function(){return a}}}();var f=t(730),g=t(25),C={styleTagTransform:function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}},setAttributes:function(n){var e=t.nc;e&&n.setAttribute("nonce",e)},insert:function(n){var e=a()("head");if(!e)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");e.appendChild(n)}};C.domAPI=o(),C.insertStyleElement=s(),e()(g.Z,C),g.Z&&g.Z.locals&&g.Z.locals;const b=document.querySelector("#content"),B=(document.querySelector("content"),function(){p.prepend(h.returnNav()),function(){const n=document.createElement("footer");let e=document.createElement("h5");e.textContent="Copyright © 2021 AhnafS",n.appendChild(e);let t=new Image;t.src=f,t.addEventListener("click",(n=>{window.open("https://github.com/AhnafS","_blank")})),n.appendChild(t),b.appendChild(n)}()}),v=document.querySelector("#content"),I=function(){!function(){const n=document.createElement("div");n.setAttribute("id","homePage"),v.appendChild(n);const e=document.createElement("div");e.setAttribute("id","homeInfo");let t=document.createElement("h4");t.textContent="Most comfortable and relaxing resturant around you",e.appendChild(t);let r=document.createElement("h5");r.textContent="Since 2004",e.appendChild(r);let o=new Image;o.src=m,e.appendChild(o),n.appendChild(e)}(),B()};var y=t(296),w=t(966),k={styleTagTransform:function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}},setAttributes:function(n){var e=t.nc;e&&n.setAttribute("nonce",e)},insert:function(n){var e=a()("head");if(!e)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");e.appendChild(n)}};k.domAPI=o(),k.insertStyleElement=s(),e()(w.Z,k),w.Z&&w.Z.locals&&w.Z.locals;var x=t(240),E=t(36),D=t(468),S=t(120),j=t(626);const T=document.querySelector("#content"),z=function(n,e,t,r){const o=document.createElement("div");o.classList.add("item");const i=document.createElement("h3");i.textContent=n,o.appendChild(i);const a=new Image;a.src=e,o.appendChild(a);const c=document.createElement("h4");c.textContent=t,o.appendChild(c),r.appendChild(o)};var P=t(430),Z={styleTagTransform:function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}},setAttributes:function(n){var e=t.nc;e&&n.setAttribute("nonce",e)},insert:function(n){var e=a()("head");if(!e)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");e.appendChild(n)}};Z.domAPI=o(),Z.insertStyleElement=s(),e()(P.Z,Z),P.Z&&P.Z.locals&&P.Z.locals;const q=document.querySelector("#content");I();const W=document.querySelector("#content");h.returnHome().addEventListener("click",(n=>{W.innerHTML="",I()})),h.returnMenu().addEventListener("click",(n=>{W.innerHTML="",function(){const n=function(){const n=document.createElement("div");n.setAttribute("id","menuPage"),T.appendChild(n);const e=document.createElement("div");return e.setAttribute("id","menu"),n.appendChild(e),{menuPage:n,menuDiv:e}}();z("Hotdog",y,"$2",n.menuDiv),z("Burger",x,"$4",n.menuDiv),z("Fruit Salad",E,"$3",n.menuDiv),z("Cheese Pizza",D,"$8",n.menuDiv),z("Cheese Pizza",S,"$5",n.menuDiv),z("Cheese Pizza",j,"$3",n.menuDiv),B()}(),console.log("something happened")})),h.returnContactUs().addEventListener("click",(n=>{W.innerHTML="",function(){const n=document.createElement("div");n.setAttribute("id","contactPage"),q.appendChild(n);const e=document.createElement("div");e.setAttribute("id","contactInfo");const t=document.createElement("div");t.setAttribute("id","location");let r=document.createElement("h2");r.textContent="Located At:";let o=document.createElement("h3");o.textContent="399 Harvey Dr. New York, NY 10002",t.append(r,o);const i=document.createElement("div");i.setAttribute("id","hours");let a=document.createElement("h2");a.textContent="We Are Open:";let c=document.createElement("h3");c.textContent="Monday - Friday: 8am to 9pm",i.append(a,c),e.append(t,i),n.appendChild(e)}(),B()}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,